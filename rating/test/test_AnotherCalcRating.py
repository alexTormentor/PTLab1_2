import pytest
from ComplexLibrary import StudentCharacteristics, DataType, CalcRating

RatingType = dict[str, float]

# Тестовые данные
data: DataType = {
    "Абрамов Петр Сергеевич":
        [
            ("математика", 80),
            ("русский язык", 76),
            ("программирование", 100)
        ],
    "Петров Игорь Владимирович":
        [
            ("математика", 61),
            ("русский язык", 70),
            ("программирование", 78),
            ("литература", 97)
        ]
}

# Ожидаемые результаты
expected_rating: RatingType = {
    "Абрамов Петр Сергеевич":  85.33333333333333,
    "Петров Игорь Владимирович": 76.5000
}


def test_empty_data():
    # Тест на обработку пустых данных
    calc = CalcRating({})
    result = calc.calc()

    # Проверка, что результат должен быть пустым словарем
    assert result == {}


def test_zero_scores():
    # Тест на обработку данных с нулевыми оценками
    data_with_zeros = {
        "Абрамов Петр Сергеевич":
        [
            ("математика", 0),
            ("русский язык", 0),
            ("программирование", 0)
        ],
        "Петров Игорь Владимирович":
        [
            ("математика", 0),
            ("русский язык", 0),
            ("программирование", 0),
            ("литература", 0)
        ]
    }

    calc = CalcRating(data_with_zeros)
    result = calc.calc()

    # Проверка, что результат должен быть словарем с нулевыми значениями
    assert result == {"Абрамов Петр Сергеевич": 0.0, "Петров Игорь Владимирович": 0.0}




if __name__ == '__main__':
    pytest.main()
